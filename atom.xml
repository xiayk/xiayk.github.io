<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiaYk Blog</title>
  
  <subtitle>xBlog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiayk.cc/"/>
  <updated>2019-06-28T20:05:34.000Z</updated>
  <id>https://xiayk.cc/</id>
  
  <author>
    <name>XiaYk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Springboot集成jwt实现token验证</title>
    <link href="https://xiayk.cc/2019/06/28/springboot%E9%9B%86%E6%88%90jwt%E5%AE%9E%E7%8E%B0token%E9%AA%8C%E8%AF%81/"/>
    <id>https://xiayk.cc/2019/06/28/springboot集成jwt实现token验证/</id>
    <published>2019-06-28T04:51:00.000Z</published>
    <updated>2019-06-28T20:05:34.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT"></a>什么是JWT</h4><p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC 7519).定义了一种简洁的，自包含的方法用于通信双方之间以JSON对象的形式安全的传递信息。因为数字签名的存在，这些信息是可信的，JWT可以使用HMAC算法或者是RSA的公私秘钥对进行签名。</p><h4 id="JWT请求流程"><a href="#JWT请求流程" class="headerlink" title="JWT请求流程"></a>JWT请求流程</h4><image src="http://file.xiayk.com/4630295-7df0d10fcffe831b.png"><ol><li>用户使用账号和面发出post请求；</li><li>服务器使用私钥创建一个jwt；</li><li>服务器返回这个jwt给浏览器；</li><li>浏览器将该jwt串在请求头中像服务器发送请求；</li><li>服务器验证该jwt；</li><li>返回响应的资源给浏览器。</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>JwtConfig.java<br>创建token  存入redis 设置token过时间, 如果在规定时间内没有验证token redis就会删除token<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据微信用户登陆信息创建 token</span></span><br><span class="line"><span class="comment">* 注 : 这里的token会被缓存到redis中,用作为二次验证</span></span><br><span class="line"><span class="comment">* redis里面缓存的时间应该和jwt token的过期时间设置相同</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> wxRes 微信用户信息</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 返回 jwt token</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">createTokenByWxAccount</span><span class="params">(WxRes wxRes)</span> </span>&#123;</span><br><span class="line">        String jwtId = UUID.randomUUID().toString();                 <span class="comment">//JWT 随机ID,做为验证的key</span></span><br><span class="line">        <span class="comment">//1 . 加密算法进行签名得到token</span></span><br><span class="line">        Algorithm algorithm = Algorithm.HMAC256(SECRET_KEY);</span><br><span class="line">        String token = JWT.create()</span><br><span class="line">                .withClaim(<span class="string">"wxOpenId"</span>, wxRes.getWxopenid())</span><br><span class="line">                .withClaim(<span class="string">"sessionKey"</span>, wxRes.getSessionkey())</span><br><span class="line">                .withClaim(<span class="string">"jwt-id"</span>, jwtId)</span><br><span class="line">                .withExpiresAt(<span class="keyword">new</span> Date(System.currentTimeMillis() + expire_time*<span class="number">1000</span>))  <span class="comment">//JWT 配置过期时间的正确姿势</span></span><br><span class="line">                .sign(algorithm);</span><br><span class="line">        <span class="comment">//2 . Redis缓存JWT, 注 : 请和JWT过期时间一致</span></span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">"JWT-SESSION-"</span> + jwtId, token, expire_time, TimeUnit.SECONDS);</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>验证token redis给token续期<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 校验token是否正确</span></span><br><span class="line"><span class="comment"> * 1 . 根据token解密，解密出jwt-id , 先从redis中查找出redisToken，匹配是否相同</span></span><br><span class="line"><span class="comment"> * 2 . 然后再对redisToken进行解密，解密成功则 继续流程 和 进行token续期</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> token 密钥</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回是否校验通过</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verifyToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//1 . 根据token解密，解密出jwt-id , 先从redis中查找出redisToken，匹配是否相同</span></span><br><span class="line">        String redisToken = redisTemplate.opsForValue().get(<span class="string">"JWT-SESSION-"</span> + getJwtIdByToken(token));</span><br><span class="line">         <span class="keyword">if</span> (!redisToken.equals(token)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">         <span class="comment">//2 . 得到算法相同的JWTVerifier</span></span><br><span class="line">         Algorithm algorithm = Algorithm.HMAC256(SECRET_KEY);</span><br><span class="line">         JWTVerifier verifier = JWT.require(algorithm)</span><br><span class="line">                 .withClaim(<span class="string">"wxOpenId"</span>, getWxOpenIdByToken(redisToken))</span><br><span class="line">                 .withClaim(<span class="string">"sessionKey"</span>, getSessionKeyByToken(redisToken))</span><br><span class="line">                 .withClaim(<span class="string">"jwt-id"</span>, getJwtIdByToken(redisToken))</span><br><span class="line">                 .acceptExpiresAt(System.currentTimeMillis() + expire_time*<span class="number">1000</span> )  <span class="comment">//JWT 正确的配置续期姿势</span></span><br><span class="line">                 .build();</span><br><span class="line">         <span class="comment">//3 . 验证token</span></span><br><span class="line">         verifier.verify(redisToken);</span><br><span class="line">         <span class="comment">//4 . Redis缓存JWT续期</span></span><br><span class="line">         redisTemplate.opsForValue().set(<span class="string">"JWT-SESSION-"</span> + getJwtIdByToken(token), redisToken, expire_time, TimeUnit.SECONDS);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123; <span class="comment">//捕捉到任何异常都视为校验失败</span></span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>拦截器<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拦截器  token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> LoginInterceptor</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> XiaYk</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-06-23 22:06</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(LoginInterceptor.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WxResService service;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String notloginRes = JSONObject.toJSONString(<span class="keyword">new</span> RestResult(<span class="keyword">false</span>, -<span class="number">1</span>, <span class="string">""</span>, <span class="string">"未登录"</span>));</span><br><span class="line">    <span class="keyword">private</span> String errRes = JSONObject.toJSONString(<span class="keyword">new</span> RestResult(<span class="keyword">false</span>, -<span class="number">2</span>, <span class="string">""</span>, <span class="string">"登录过期, 请重新登录"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"application/json; charset=utf-8"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-control-Allow-Origin"</span>, request.getHeader(<span class="string">"Origin"</span>));</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"GET,POST,OPTIONS,PUT,DELETE"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>, request.getHeader(<span class="string">"Access-Control-Request-Headers"</span>));</span><br><span class="line">        <span class="comment">// 跨域时会首先发送一个option请求，这里我们给option请求直接返回正常状态</span></span><br><span class="line">        <span class="keyword">if</span> (request.getMethod().equals(RequestMethod.OPTIONS.name())) &#123;</span><br><span class="line">            response.setStatus(HttpStatus.OK.value());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取访问URL</span></span><br><span class="line">        String url = request.getRequestURL().toString();</span><br><span class="line">        String token = request.getHeader(<span class="string">"XWEB_TOKEN"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (token == <span class="keyword">null</span>)&#123;</span><br><span class="line">            PrintWriter out = response.getWriter();</span><br><span class="line">            out.append(notloginRes);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (service.verifyToken(token))&#123;</span><br><span class="line">            logger.info(<span class="string">"url ====&gt; &#123;&#125;  token ====&gt; &#123;&#125;"</span>, url, token);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            logger.info(<span class="string">"token 过期"</span>);</span><br><span class="line">            PrintWriter out = response.getWriter();</span><br><span class="line">            out.println(errRes);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * // 请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> handler</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modelAndView</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在整个请求结束之后被调用，也就是在DispatcherServlet 渲染了对应的视图之后执行（主要是用于进行资源清理工作）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> handler</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> MyWebAppConfigurer</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> XiaYk</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-06-24 00:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebAppConfigurer</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">LoginInterceptor <span class="title">interceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LoginInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configureMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.configureMessageConverters(converters);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.addInterceptors(registry);</span><br><span class="line">        registry.addInterceptor(interceptor()).addPathPatterns(<span class="string">"/wx/**"</span>)<span class="comment">//拦截</span></span><br><span class="line">                .excludePathPatterns(<span class="string">"/wx/login"</span>).excludePathPatterns(<span class="string">"/getData"</span>);<span class="comment">//开放</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在controller调用 获取token 返回给前端<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"login"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> RestResult <span class="title">wxLogin</span><span class="params">(@RequestParam(<span class="string">"code"</span>)</span> String code)</span>&#123;</span><br><span class="line">    String token = wxResService.selectByCode(code);</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"token"</span>, token);</span><br><span class="line">    map.put(<span class="string">"username"</span>, <span class="string">"XiaYk"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> RestResult(<span class="keyword">true</span>, <span class="number">200</span>, map, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>pom.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--springboot--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--JWT--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p></image>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;什么是JWT&quot;&gt;&lt;a href=&quot;#什么是JWT&quot; class=&quot;headerlink&quot; title=&quot;什么是JWT&quot;&gt;&lt;/a&gt;什么是JWT&lt;/h4&gt;&lt;p&gt;Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准
      
    
    </summary>
    
      <category term="java" scheme="https://xiayk.cc/categories/java/"/>
    
    
      <category term="springboot" scheme="https://xiayk.cc/tags/springboot/"/>
    
      <category term="java" scheme="https://xiayk.cc/tags/java/"/>
    
      <category term="jwt" scheme="https://xiayk.cc/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序-Java (登录)</title>
    <link href="https://xiayk.cc/2019/05/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-Java-%E7%99%BB%E5%BD%95/"/>
    <id>https://xiayk.cc/2019/05/10/微信小程序-Java-登录/</id>
    <published>2019-05-10T05:17:05.000Z</published>
    <updated>2019-06-28T05:57:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/wx.login.html" target="_blank" rel="noopener">微信官方文档</a><br>小程序可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标识，快速建立小程序内的用户体系。</p><h3 id="一-Java后端"><a href="#一-Java后端" class="headerlink" title="一,Java后端"></a>一,Java后端</h3><p>接收小程序端传过来的code;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 微信登录</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(value = <span class="string">"/login"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> RestResult <span class="title">wxlogin</span><span class="params">(@RequestParam(<span class="string">"code"</span>)</span> String code)</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//获取openid</span></span><br><span class="line">       JSONObject jsonObject = WxUtil.getSessionKeyOropenid(code);</span><br><span class="line">       String openid = jsonObject.get(<span class="string">"openid"</span>).toString();</span><br><span class="line">       System.out.println(code);</span><br><span class="line">       WxUserInfoKey wxUserInfoKey = <span class="keyword">new</span> WxUserInfoKey();</span><br><span class="line">       wxUserInfoKey.setOpenid(openid);</span><br><span class="line">       WxUserInfo info = wxUserInfoService.selectByPrimaryKey(wxUserInfoKey);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (info == <span class="keyword">null</span>)&#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> MyException(-<span class="number">1</span>, <span class="string">"未绑定账户"</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       UserKey key = <span class="keyword">new</span> UserKey();</span><br><span class="line">       key.setUsername(info.getUsername());</span><br><span class="line">       User user = userService.selectByPrimaryKey(key);</span><br><span class="line">       Subject subject = SecurityUtils.getSubject();</span><br><span class="line">       UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(user.getUsername(),user.getPassword());</span><br><span class="line">       subject.login(token);</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> RestResult(<span class="keyword">true</span>,<span class="number">0</span>,info,<span class="string">"mes: ok"</span>);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>WeChat工具类/获取openid<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiayk.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.jce.provider.BouncyCastleProvider;</span><br><span class="line"><span class="keyword">import</span> org.codehaus.xfire.util.Base64;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.BadPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.IllegalBlockSizeException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.NoSuchPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.IvParameterSpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.*;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidParameterSpecException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> WxUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> XiaYk</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-04-26 19:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WxUtil</span> </span>&#123;</span><br><span class="line">    Logger log = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取微信小程序 session_key 和 openid</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> zhy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 调用微信登陆返回的Code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">getSessionKeyOropenid</span><span class="params">(String wxCode)</span></span>&#123;</span><br><span class="line">        String requestUrl = <span class="string">"https://api.weixin.qq.com/sns/jscode2session"</span>;<span class="comment">//resource.getString("url"); //请求地址 https://api.weixin.qq.com/sns/jscode2session</span></span><br><span class="line">        Map&lt;String,String&gt; requestUrlParam = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        requestUrlParam.put(<span class="string">"appid"</span>, <span class="string">"*************"</span>); <span class="comment">//开发者设置中的appId</span></span><br><span class="line">        requestUrlParam.put(<span class="string">"secret"</span>, <span class="string">"***********************"</span>); <span class="comment">//开发者设置中的appSecret</span></span><br><span class="line">        requestUrlParam.put(<span class="string">"js_code"</span>, wxCode); <span class="comment">//小程序调用wx.login返回的code</span></span><br><span class="line">        requestUrlParam.put(<span class="string">"grant_type"</span>, <span class="string">"authorization_code"</span>);  <span class="comment">//默认参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送post请求读取调用微信 https://api.weixin.qq.com/sns/jscode2session 接口获取openid用户唯一标识</span></span><br><span class="line">        JSONObject jsonObject = JSON.parseObject(UrlUtil.sendPost(requestUrl, requestUrlParam));</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密用户敏感数据获取用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> zhy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sessionKey 数据进行加密签名的密钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> encryptedData 包括敏感数据在内的完整用户信息的加密数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iv 加密算法的初始向量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">getUserInfo</span><span class="params">(String encryptedData,String sessionKey,String iv)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 被加密的数据</span></span><br><span class="line">        <span class="keyword">byte</span>[] dataByte = Base64.decode(encryptedData);</span><br><span class="line">        <span class="comment">// 加密秘钥</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyByte = Base64.decode(sessionKey);</span><br><span class="line">        <span class="comment">// 偏移量</span></span><br><span class="line">        <span class="keyword">byte</span>[] ivByte = Base64.decode(iv);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 如果密钥不足16位，那么就补足. 这个if 中的内容很重要</span></span><br><span class="line">            <span class="keyword">int</span> base = <span class="number">16</span>;</span><br><span class="line">            <span class="keyword">if</span> (keyByte.length % base != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> groups = keyByte.length / base + (keyByte.length % base != <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">byte</span>[] temp = <span class="keyword">new</span> <span class="keyword">byte</span>[groups * base];</span><br><span class="line">                Arrays.fill(temp, (<span class="keyword">byte</span>) <span class="number">0</span>);</span><br><span class="line">                System.arraycopy(keyByte, <span class="number">0</span>, temp, <span class="number">0</span>, keyByte.length);</span><br><span class="line">                keyByte = temp;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 初始化</span></span><br><span class="line">            Security.addProvider(<span class="keyword">new</span> BouncyCastleProvider());</span><br><span class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/CBC/PKCS7Padding"</span>,<span class="string">"BC"</span>);</span><br><span class="line">            SecretKeySpec spec = <span class="keyword">new</span> SecretKeySpec(keyByte, <span class="string">"AES"</span>);</span><br><span class="line">            AlgorithmParameters parameters = AlgorithmParameters.getInstance(<span class="string">"AES"</span>);</span><br><span class="line">            parameters.init(<span class="keyword">new</span> IvParameterSpec(ivByte));</span><br><span class="line">            cipher.init(Cipher.DECRYPT_MODE, spec, parameters);<span class="comment">// 初始化</span></span><br><span class="line">            <span class="keyword">byte</span>[] resultByte = cipher.doFinal(dataByte);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != resultByte &amp;&amp; resultByte.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                String result = <span class="keyword">new</span> String(resultByte, <span class="string">"UTF-8"</span>);</span><br><span class="line">                <span class="keyword">return</span> JSON.parseObject(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidParameterSpecException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidAlgorithmParameterException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchProviderException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/api/wx.login.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微信官方文档&lt;/a&gt;&lt;br&gt;小程序可以通过微信官方提供的登
      
    
    </summary>
    
      <category term="java" scheme="https://xiayk.cc/categories/java/"/>
    
    
      <category term="Java" scheme="https://xiayk.cc/tags/Java/"/>
    
      <category term="wechat" scheme="https://xiayk.cc/tags/wechat/"/>
    
      <category term="springboot" scheme="https://xiayk.cc/tags/springboot/"/>
    
      <category term="小程序" scheme="https://xiayk.cc/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Linux下Nginx+Tomcat整合配置</title>
    <link href="https://xiayk.cc/2019/05/05/Linux%E4%B8%8BNginx-Tomcat%E6%95%B4%E5%90%88%E9%85%8D%E7%BD%AE/"/>
    <id>https://xiayk.cc/2019/05/05/Linux下Nginx-Tomcat整合配置/</id>
    <published>2019-05-05T14:14:21.000Z</published>
    <updated>2019-06-28T05:02:36.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-安装jdk和tomcat"><a href="#一-安装jdk和tomcat" class="headerlink" title="一, 安装jdk和tomcat"></a>一, 安装jdk和tomcat</h4><p>1, jdk安装<br>jdk的话,我直接用的yum安装的,简单方便<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum list java-1.8*</span><br><span class="line">yum install java-1.8*</span><br></pre></td></tr></table></figure></p><p>安装完检查jdk<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p><p>安装成功后就可以开始安装tomcat了</p><p>2, tomcat安装<br>先去tomcat官网  找到自己需要的版本 下载那个<code>tar.gz</code>后缀的<br>我用的<a href="http://tomcat.apache.org" target="_blank" rel="noopener">tomcat官网</a><br>然后在服务器上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//下载</span><br><span class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.40/bin/apache-tomcat-8.5.40.tar.gz</span><br><span class="line">//解压</span><br><span class="line">tar -zxvf apache-tomcat-8.5.40.tar.gz</span><br></pre></td></tr></table></figure></p><p>下载完解压然后测试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//运行</span><br><span class="line">./apache-tomcat-8.5.40.tar.gz/bin/start.sh</span><br></pre></td></tr></table></figure></p><p>访问一下<code>ip:8080</code>如能成功显示tomcat页面就行了<br>如不能访问,先看一下tomcat日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat apache-tomcat-8.5.40/logs/catalina.out</span><br></pre></td></tr></table></figure></p><p>一般应该是没问题的, 看一下8080端口是否开放<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef| grep tomcat</span><br></pre></td></tr></table></figure></p><p>这个可以看tomcat进程<br>没问题的话  就可以开始下一步了</p><h4 id="二-Nginx安装和配置"><a href="#二-Nginx安装和配置" class="headerlink" title="二, Nginx安装和配置"></a>二, Nginx安装和配置</h4><p>nginx我也是刚开始来了解, 可能配置得不是很专业<br><a href="http://nginx.org" target="_blank" rel="noopener">nginx官网</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//下载</span><br><span class="line">wget http://nginx.org/download/nginx-1.14.2.tar.gz</span><br><span class="line">//解压</span><br><span class="line">tar -zxvf nginx-1.14.2.tar.gz</span><br></pre></td></tr></table></figure></p><p>80端口配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  xiayk.cn; #域名</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        location / &#123;</span><br><span class="line">           root   html; #站点目录</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  api.xiayk.cn;</span><br><span class="line">        index index.html index.htm index.jsp;</span><br><span class="line">        location / &#123;</span><br><span class="line">           proxy_pass http://127.0.0.1:8080/api;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>443端口配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen 443;</span><br><span class="line">     server_name xiayk.cn; #填写绑定证书的域名</span><br><span class="line">     ssl on;</span><br><span class="line">     ssl_certificate /usr/local/nginx/conf/ssl/www/1_xiayk.cn_bundle.crt;</span><br><span class="line">     ssl_certificate_key /usr/local/nginx/conf/ssl/www/2_xiayk.cn.key;</span><br><span class="line">     ssl_session_timeout 5m;</span><br><span class="line">     ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</span><br><span class="line">     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">     ssl_prefer_server_ciphers on;</span><br><span class="line">     location / &#123;</span><br><span class="line">         root   html; #站点目录</span><br><span class="line">         index  index.html index.htm;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一-安装jdk和tomcat&quot;&gt;&lt;a href=&quot;#一-安装jdk和tomcat&quot; class=&quot;headerlink&quot; title=&quot;一, 安装jdk和tomcat&quot;&gt;&lt;/a&gt;一, 安装jdk和tomcat&lt;/h4&gt;&lt;p&gt;1, jdk安装&lt;br&gt;jdk的话,我直
      
    
    </summary>
    
      <category term="Linux" scheme="https://xiayk.cc/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://xiayk.cc/tags/Linux/"/>
    
      <category term="nginx" scheme="https://xiayk.cc/tags/nginx/"/>
    
      <category term="tomcat" scheme="https://xiayk.cc/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://xiayk.cc/2019/05/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://xiayk.cc/2019/05/02/我的第一篇博客/</id>
    <published>2019-05-02T06:20:31.000Z</published>
    <updated>2019-05-02T06:20:31.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xiayk.cc/2019/05/02/hello-world/"/>
    <id>https://xiayk.cc/2019/05/02/hello-world/</id>
    <published>2019-05-02T05:12:47.000Z</published>
    <updated>2019-05-02T05:12:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
