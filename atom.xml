<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>昨天</title>
  
  <subtitle>hello</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiayk.cn/"/>
  <updated>2020-04-04T13:59:36.000Z</updated>
  <id>https://xiayk.cn/</id>
  
  <author>
    <name>XiaYk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git常用命令</title>
    <link href="https://xiayk.cn/2020/04/04/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://xiayk.cn/2020/04/04/Git常用命令/</id>
    <published>2020-04-04T13:52:17.000Z</published>
    <updated>2020-04-04T13:59:36.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br></pre></td><td class="code"><pre><span class="line">git branch 查看本地所有分支</span><br><span class="line"></span><br><span class="line">git status 查看当前状态</span><br><span class="line"></span><br><span class="line">git commit 提交</span><br><span class="line"></span><br><span class="line">git branch -a 查看所有的分支</span><br><span class="line"></span><br><span class="line">git branch -r 查看远程所有分支</span><br><span class="line"></span><br><span class="line">git commit -am &quot;init&quot; 提交并且加注释</span><br><span class="line"></span><br><span class="line">git remote add origin git@192.168.1.119:ndshow</span><br><span class="line"></span><br><span class="line">git push origin master 将文件给推到服务器上</span><br><span class="line"></span><br><span class="line">git remote show origin 显示远程库origin里的资源</span><br><span class="line"></span><br><span class="line">git push origin master:develop</span><br><span class="line"></span><br><span class="line">git push origin master:hb-dev 将本地库与服务器上的库进行关联</span><br><span class="line"></span><br><span class="line">git checkout --track origin/dev 切换到远程dev分支</span><br><span class="line"></span><br><span class="line">git branch -D master develop 删除本地库develop</span><br><span class="line"></span><br><span class="line">git checkout -b dev 建立一个新的本地分支dev</span><br><span class="line"></span><br><span class="line">git merge origin/dev 将分支dev与当前分支进行合并</span><br><span class="line"></span><br><span class="line">git checkout dev 切换到本地dev分支</span><br><span class="line"></span><br><span class="line">git remote show 查看远程库</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git rm 文件名(包括路径) 从git中删除指定文件</span><br><span class="line"></span><br><span class="line">git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来</span><br><span class="line"></span><br><span class="line">git config --list 看所有用户</span><br><span class="line"></span><br><span class="line">git ls-files 看已经被提交的</span><br><span class="line"></span><br><span class="line">git rm [file name] 删除一个文件</span><br><span class="line"></span><br><span class="line">git commit -a 提交当前repos的所有的改变</span><br><span class="line"></span><br><span class="line">git add [file name] 添加一个文件到git index</span><br><span class="line"></span><br><span class="line">git commit -v 当你用－v参数的时候可以看commit的差异</span><br><span class="line"></span><br><span class="line">git commit -m &quot;This is the message describing the commit&quot; 添加commit信息</span><br><span class="line"></span><br><span class="line">git commit -a -a是代表add，把所有的change加到git index里然后再commit</span><br><span class="line"></span><br><span class="line">git commit -a -v 一般提交命令</span><br><span class="line"></span><br><span class="line">git log 看你commit的日志</span><br><span class="line"></span><br><span class="line">git diff 查看尚未暂存的更新</span><br><span class="line"></span><br><span class="line">git rm a.a 移除文件(从暂存区和工作区中删除)</span><br><span class="line"></span><br><span class="line">git rm --cached a.a 移除文件(只从暂存区中删除)</span><br><span class="line"></span><br><span class="line">git commit -m &quot;remove&quot; 移除文件(从Git中删除)</span><br><span class="line"></span><br><span class="line">git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)</span><br><span class="line"></span><br><span class="line">git diff --cached 或 $ git diff --staged 查看尚未提交的更新</span><br><span class="line"></span><br><span class="line">git stash push 将文件给push到一个临时空间中</span><br><span class="line"></span><br><span class="line">git stash pop 将文件从临时空间pop下来</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------</span><br><span class="line"></span><br><span class="line">git remote add origin git@github.com:username/Hello-World.git</span><br><span class="line"></span><br><span class="line">git push origin master 将本地项目给提交到服务器中</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------</span><br><span class="line"></span><br><span class="line">git pull 本地与服务器端同步</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。</span><br><span class="line"></span><br><span class="line">git push origin serverfix:awesomebranch</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">git fetch 相当于是从远程获取最新版本到本地，不会自动merge</span><br><span class="line"></span><br><span class="line">git commit -a -m &quot;log_message&quot; (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：</span><br><span class="line"></span><br><span class="line">git branch branch_0.1 master 从主分支master创建branch_0.1分支</span><br><span class="line"></span><br><span class="line">git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0</span><br><span class="line"></span><br><span class="line">git checkout branch_1.0/master 切换到branch_1.0/master分支</span><br><span class="line"></span><br><span class="line">du -hs</span><br><span class="line"></span><br><span class="line">git branch 删除远程branch</span><br><span class="line"></span><br><span class="line">git push origin :branch_remote_name</span><br><span class="line"></span><br><span class="line">git branch -r -d branch_remote_name</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------</span><br><span class="line"></span><br><span class="line">初始化版本库，并提交到远程服务器端</span><br><span class="line"></span><br><span class="line">mkdir WebApp</span><br><span class="line"></span><br><span class="line">cd WebApp</span><br><span class="line"></span><br><span class="line">git init 本地初始化</span><br><span class="line"></span><br><span class="line">touch README</span><br><span class="line"></span><br><span class="line">git add README 添加文件</span><br><span class="line"></span><br><span class="line">git commit -m &apos;first commit&apos;</span><br><span class="line"></span><br><span class="line">git remote add origin git@github.com:daixu/WebApp.git</span><br><span class="line"></span><br><span class="line">增加一个远程服务器端</span><br><span class="line"></span><br><span class="line">上面的命令会增加URL地址为&apos;git@github.com:daixu/WebApp.git&apos;，名称为origin的远程服务器库，以后提交代码的时候只需要使用 origin别名即可</span><br><span class="line"></span><br><span class="line">二、 Git 命令速查表</span><br><span class="line"></span><br><span class="line">1、常用的Git命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git add添加至暂存区</span><br><span class="line"></span><br><span class="line">git add–interactive交互式添加</span><br><span class="line"></span><br><span class="line">git apply应用补丁</span><br><span class="line"></span><br><span class="line">git am应用邮件格式补丁</span><br><span class="line"></span><br><span class="line">git annotate同义词，等同于 git blame</span><br><span class="line"></span><br><span class="line">git archive文件归档打包</span><br><span class="line"></span><br><span class="line">git bisect二分查找</span><br><span class="line"></span><br><span class="line">git blame文件逐行追溯</span><br><span class="line"></span><br><span class="line">git branch分支管理</span><br><span class="line"></span><br><span class="line">git cat-file版本库对象研究工具</span><br><span class="line"></span><br><span class="line">git checkout检出到工作区、切换或创建分支</span><br><span class="line"></span><br><span class="line">git cherry-pick提交拣选</span><br><span class="line"></span><br><span class="line">git citool图形化提交，相当于 git gui 命令</span><br><span class="line"></span><br><span class="line">git clean清除工作区未跟踪文件</span><br><span class="line"></span><br><span class="line">git clone克隆版本库</span><br><span class="line"></span><br><span class="line">git commit提交</span><br><span class="line"></span><br><span class="line">git config查询和修改配置</span><br><span class="line"></span><br><span class="line">git describe通过里程碑直观地显示提交ID</span><br><span class="line"></span><br><span class="line">git diff差异比较</span><br><span class="line"></span><br><span class="line">git difftool调用图形化差异比较工具</span><br><span class="line"></span><br><span class="line">git fetch获取远程版本库的提交</span><br><span class="line"></span><br><span class="line">git format-patch创建邮件格式的补丁文件。参见 git am 命令</span><br><span class="line"></span><br><span class="line">git grep文件内容搜索定位工具</span><br><span class="line"></span><br><span class="line">git gui基于Tcl/Tk的图形化工具，侧重提交等操作</span><br><span class="line"></span><br><span class="line">git help帮助</span><br><span class="line"></span><br><span class="line">git init版本库初始化</span><br><span class="line"></span><br><span class="line">git init-db*同义词，等同于 git init</span><br><span class="line"></span><br><span class="line">git log显示提交日志</span><br><span class="line"></span><br><span class="line">git merge分支合并</span><br><span class="line"></span><br><span class="line">git mergetool图形化冲突解决</span><br><span class="line"></span><br><span class="line">git mv重命名</span><br><span class="line"></span><br><span class="line">git pull拉回远程版本库的提交</span><br><span class="line"></span><br><span class="line">git push推送至远程版本库</span><br><span class="line"></span><br><span class="line">git rebase分支变基</span><br><span class="line"></span><br><span class="line">git rebase–interactive交互式分支变基</span><br><span class="line"></span><br><span class="line">git reflog分支等引用变更记录管理</span><br><span class="line"></span><br><span class="line">git remote远程版本库管理</span><br><span class="line"></span><br><span class="line">git repo-config*同义词，等同于 git config</span><br><span class="line"></span><br><span class="line">git reset重置改变分支“游标”指向</span><br><span class="line"></span><br><span class="line">git rev-parse将各种引用表示法转换为哈希值等</span><br><span class="line"></span><br><span class="line">git revert反转提交</span><br><span class="line"></span><br><span class="line">git rm删除文件</span><br><span class="line"></span><br><span class="line">git show显示各种类型的对象</span><br><span class="line"></span><br><span class="line">git stage*同义词，等同于 git add</span><br><span class="line"></span><br><span class="line">git stash保存和恢复进度</span><br><span class="line"></span><br><span class="line">git status显示工作区文件状态</span><br><span class="line"></span><br><span class="line">git tag里程碑管理</span><br><span class="line"></span><br><span class="line">2、对象库操作相关命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git commit-tree从树对象创建提交</span><br><span class="line"></span><br><span class="line">git hash-object从标准输入或文件计算哈希值或创建对象</span><br><span class="line"></span><br><span class="line">git ls-files显示工作区和暂存区文件</span><br><span class="line"></span><br><span class="line">git ls-tree显示树对象包含的文件</span><br><span class="line"></span><br><span class="line">git mktag读取标准输入创建一个里程碑对象</span><br><span class="line"></span><br><span class="line">git mktree读取标准输入创建一个树对象</span><br><span class="line"></span><br><span class="line">git read-tree读取树对象到暂存区</span><br><span class="line"></span><br><span class="line">git update-index工作区内容注册到暂存区及暂存区管理</span><br><span class="line"></span><br><span class="line">git unpack-file创建临时文件包含指定 blob 的内容</span><br><span class="line"></span><br><span class="line">git write-tree从暂存区创建一个树对象</span><br><span class="line"></span><br><span class="line">3、引用操作相关命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git check-ref-format检查引用名称是否符合规范</span><br><span class="line"></span><br><span class="line">git for-each-ref引用迭代器，用于shell编程</span><br><span class="line"></span><br><span class="line">git ls-remote显示远程版本库的引用</span><br><span class="line"></span><br><span class="line">git name-rev将提交ID显示为友好名称</span><br><span class="line"></span><br><span class="line">git peek-remote*过时命令，请使用 git ls-remote</span><br><span class="line"></span><br><span class="line">git rev-list显示版本范围</span><br><span class="line"></span><br><span class="line">git show-branch显示分支列表及拓扑关系</span><br><span class="line"></span><br><span class="line">git show-ref显示本地引用</span><br><span class="line"></span><br><span class="line">git symbolic-ref显示或者设置符号引用</span><br><span class="line"></span><br><span class="line">git update-ref更新引用的指向</span><br><span class="line"></span><br><span class="line">git verify-tag校验 GPG 签名的Tag</span><br><span class="line"></span><br><span class="line">4、版本库管理相关命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git count-objects显示松散对象的数量和磁盘占用</span><br><span class="line"></span><br><span class="line">git filter-branch版本库重构</span><br><span class="line"></span><br><span class="line">git fsck对象库完整性检查</span><br><span class="line"></span><br><span class="line">git fsck-objects*同义词，等同于 git fsck</span><br><span class="line"></span><br><span class="line">git gc版本库存储优化</span><br><span class="line"></span><br><span class="line">git index-pack从打包文件创建对应的索引文件</span><br><span class="line"></span><br><span class="line">git lost-found*过时，请使用 git fsck –lost-found 命令</span><br><span class="line"></span><br><span class="line">git pack-objects从标准输入读入对象ID，打包到文件</span><br><span class="line"></span><br><span class="line">git pack-redundant查找多余的 pack 文件</span><br><span class="line"></span><br><span class="line">git pack-refs将引用打包到 .git/packed-refs 文件中</span><br><span class="line"></span><br><span class="line">git prune从对象库删除过期对象</span><br><span class="line"></span><br><span class="line">git prune-packed将已经打包的松散对象删除</span><br><span class="line"></span><br><span class="line">git relink为本地版本库中相同的对象建立硬连接</span><br><span class="line"></span><br><span class="line">git repack将版本库未打包的松散对象打包</span><br><span class="line"></span><br><span class="line">git show-index读取包的索引文件，显示打包文件中的内容</span><br><span class="line"></span><br><span class="line">git unpack-objects从打包文件释放文件</span><br><span class="line"></span><br><span class="line">git verify-pack校验对象库打包文件</span><br><span class="line"></span><br><span class="line">5、数据传输相关命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git fetch-pack执行 git fetch 或 git pull 命令时在本地执行此命令，用于从其他版本库获取缺失的对象</span><br><span class="line"></span><br><span class="line">git receive-pack执行 git push 命令时在远程执行的命令，用于接受推送的数据</span><br><span class="line"></span><br><span class="line">git send-pack执行 git push 命令时在本地执行的命令，用于向其他版本库推送数据</span><br><span class="line"></span><br><span class="line">git upload-archive执行 git archive –remote 命令基于远程版本库创建归档时，远程版本库执行此命令传送归档</span><br><span class="line"></span><br><span class="line">git upload-pack执行 git fetch 或 git pull 命令时在远程执行此命令，将对象打包、上传</span><br><span class="line"></span><br><span class="line">6、邮件相关命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git imap-send将补丁通过 IMAP 发送</span><br><span class="line"></span><br><span class="line">git mailinfo从邮件导出提交说明和补丁</span><br><span class="line"></span><br><span class="line">git mailsplit将 mbox 或 Maildir 格式邮箱中邮件逐一提取为文件</span><br><span class="line"></span><br><span class="line">git request-pull创建包含提交间差异和执行PULL操作地址的信息</span><br><span class="line"></span><br><span class="line">git send-email发送邮件</span><br><span class="line"></span><br><span class="line">7、协议相关命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git daemon实现Git协议</span><br><span class="line"></span><br><span class="line">git http-backend实现HTTP协议的CGI程序，支持智能HTTP协议</span><br><span class="line"></span><br><span class="line">git instaweb即时启动浏览器通过 gitweb 浏览当前版本库</span><br><span class="line"></span><br><span class="line">git shell受限制的shell，提供仅执行Git命令的SSH访问</span><br><span class="line"></span><br><span class="line">git update-server-info更新哑协议需要的辅助文件</span><br><span class="line"></span><br><span class="line">git http-fetch通过HTTP协议获取版本库</span><br><span class="line"></span><br><span class="line">git http-push通过HTTP/DAV协议推送</span><br><span class="line"></span><br><span class="line">git remote-ext由Git命令调用，通过外部命令提供扩展协议支持</span><br><span class="line"></span><br><span class="line">git remote-fd由Git命令调用，使用文件描述符作为协议接口</span><br><span class="line"></span><br><span class="line">git remote-ftp由Git命令调用，提供对FTP协议的支持</span><br><span class="line"></span><br><span class="line">git remote-ftps由Git命令调用，提供对FTPS协议的支持</span><br><span class="line"></span><br><span class="line">git remote-http由Git命令调用，提供对HTTP协议的支持</span><br><span class="line"></span><br><span class="line">git remote-https由Git命令调用，提供对HTTPS协议的支持</span><br><span class="line"></span><br><span class="line">git remote-testgit协议扩展示例脚本</span><br><span class="line"></span><br><span class="line">8、版本库转换和交互相关命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git archimport导入Arch版本库到Git</span><br><span class="line"></span><br><span class="line">git bundle提交打包和解包，以便在不同版本库间传递</span><br><span class="line"></span><br><span class="line">git cvsexportcommit将Git的一个提交作为一个CVS检出</span><br><span class="line"></span><br><span class="line">git cvsimport导入CVS版本库到Git。或者使用 cvs2git</span><br><span class="line"></span><br><span class="line">git cvsserverGit的CVS协议模拟器，可供CVS命令访问Git版本库</span><br><span class="line"></span><br><span class="line">git fast-export将提交导出为 git-fast-import 格式</span><br><span class="line"></span><br><span class="line">git fast-import其他版本库迁移至Git的通用工具</span><br><span class="line"></span><br><span class="line">git svnGit 作为前端操作 Subversion</span><br><span class="line"></span><br><span class="line">9、合并相关的辅助命令</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git merge-base供其他脚本调用，找到两个或多个提交最近的共同祖先</span><br><span class="line"></span><br><span class="line">git merge-file针对文件的两个不同版本执行三向文件合并</span><br><span class="line"></span><br><span class="line">git merge-index对index中的冲突文件调用指定的冲突解决工具</span><br><span class="line"></span><br><span class="line">git merge-octopus合并两个以上分支。参见 git merge 的octopus合并策略</span><br><span class="line"></span><br><span class="line">git merge-one-file由 git merge-index 调用的标准辅助程序</span><br><span class="line"></span><br><span class="line">git merge-ours合并使用本地版本，抛弃他人版本。参见 git merge 的ours合并策略</span><br><span class="line"></span><br><span class="line">git merge-recursive针对两个分支的三向合并。参见 git merge 的recursive合并策略</span><br><span class="line"></span><br><span class="line">git merge-resolve针对两个分支的三向合并。参见 git merge 的resolve合并策略</span><br><span class="line"></span><br><span class="line">git merge-subtree子树合并。参见 git merge 的 subtree 合并策略</span><br><span class="line"></span><br><span class="line">git merge-tree显式三向合并结果，不改变暂存区</span><br><span class="line"></span><br><span class="line">git fmt-merge-msg供执行合并操作的脚本调用，用于创建一个合并提交说明</span><br><span class="line"></span><br><span class="line">git rerere重用所记录的冲突解决方案</span><br><span class="line"></span><br><span class="line">10、 杂项</span><br><span class="line"></span><br><span class="line">命令简要说明</span><br><span class="line"></span><br><span class="line">git bisect–helper由 git bisect 命令调用，确认二分查找进度</span><br><span class="line"></span><br><span class="line">git check-attr显示某个文件是否设置了某个属性</span><br><span class="line"></span><br><span class="line">git checkout-index从暂存区拷贝文件至工作区</span><br><span class="line"></span><br><span class="line">git cherry查找没有合并到上游的提交</span><br><span class="line"></span><br><span class="line">git diff-files比较暂存区和工作区，相当于 git diff –raw</span><br><span class="line"></span><br><span class="line">git diff-index比较暂存区和版本库，相当于 git diff –cached –raw</span><br><span class="line"></span><br><span class="line">git diff-tree比较两个树对象，相当于 git diff –raw A B</span><br><span class="line"></span><br><span class="line">git difftool–helper由 git difftool 命令调用，默认要使用的差异比较工具</span><br><span class="line"></span><br><span class="line">git get-tar-commit-id从 git archive 创建的 tar 包中提取提交ID</span><br><span class="line"></span><br><span class="line">git gui–askpass命令 git gui 的获取用户口令输入界面</span><br><span class="line"></span><br><span class="line">git notes提交评论管理</span><br><span class="line"></span><br><span class="line">git patch-id补丁过滤行号和空白字符后生成补丁唯一ID</span><br><span class="line"></span><br><span class="line">git quiltimport将Quilt补丁列表应用到当前分支</span><br><span class="line"></span><br><span class="line">git replace提交替换</span><br><span class="line"></span><br><span class="line">git shortlog对 git log 的汇总输出，适合于产品发布说明</span><br><span class="line"></span><br><span class="line">git stripspace删除空行，供其他脚本调用</span><br><span class="line"></span><br><span class="line">git submodule子模组管理</span><br><span class="line"></span><br><span class="line">git tar-tree过时命令，请使用 git archive</span><br><span class="line"></span><br><span class="line">git var显示 Git 环境变量</span><br><span class="line"></span><br><span class="line">git web–browse启动浏览器以查看目录或文件</span><br><span class="line"></span><br><span class="line">git whatchanged显示提交历史及每次提交的改动</span><br><span class="line"></span><br><span class="line">git-mergetool–lib包含于其他脚本中，提供合并/差异比较工具的选择和执行</span><br><span class="line"></span><br><span class="line">git-parse-remote包含于其他脚本中，提供操作远程版本库的函数</span><br><span class="line"></span><br><span class="line">git-sh-setup包含于其他脚本中，提供 shell 编程的函数库</span><br><span class="line"></span><br><span class="line">下面脚本之家小编特为大家分享一个图片版的</span><br><span class="line"></span><br><span class="line">Git 常用命令速查表。点击查看大图。</span><br><span class="line"></span><br><span class="line">Git 常用命令速查表</span><br><span class="line">Git命令参考手册(文本版)</span><br><span class="line"></span><br><span class="line">git init                                                  # 初始化本地git仓库（创建新仓库）</span><br><span class="line"></span><br><span class="line">git config --global user.name &quot;xxx&quot;                       # 配置用户名</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;xxx@xxx.com&quot;              # 配置邮件</span><br><span class="line"></span><br><span class="line">git config --global color.ui true                         # git status等命令自动着色</span><br><span class="line"></span><br><span class="line">git config --global color.status auto</span><br><span class="line"></span><br><span class="line">git config --global color.diff auto</span><br><span class="line"></span><br><span class="line">git config --global color.branch auto</span><br><span class="line"></span><br><span class="line">git config --global color.interactive auto</span><br><span class="line"></span><br><span class="line">git clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库</span><br><span class="line"></span><br><span class="line">git status                                                # 查看当前版本状态（是否修改）</span><br><span class="line"></span><br><span class="line">git add xyz                                               # 添加xyz文件至index</span><br><span class="line"></span><br><span class="line">git add .                                                 # 增加当前子目录下所有更改过的文件至index</span><br><span class="line"></span><br><span class="line">git commit -m &apos;xxx&apos;                                       # 提交</span><br><span class="line"></span><br><span class="line">git commit --amend -m &apos;xxx&apos;                               # 合并上一次提交（用于反复修改）</span><br><span class="line"></span><br><span class="line">git commit -am &apos;xxx&apos;                                      # 将add和commit合为一步</span><br><span class="line"></span><br><span class="line">git rm xxx                                                # 删除index中的文件</span><br><span class="line"></span><br><span class="line">git rm -r *                                               # 递归删除</span><br><span class="line"></span><br><span class="line">git log                                                   # 显示提交日志</span><br><span class="line"></span><br><span class="line">git log -1                                                # 显示1行日志 -n为n行</span><br><span class="line"></span><br><span class="line">git log -5</span><br><span class="line"></span><br><span class="line">git log --stat                                            # 显示提交日志及相关变动文件</span><br><span class="line"></span><br><span class="line">git log -p -m</span><br><span class="line"></span><br><span class="line">git show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容</span><br><span class="line"></span><br><span class="line">git show dfb02                                            # 可只用commitid的前几位</span><br><span class="line"></span><br><span class="line">git show HEAD                                             # 显示HEAD提交日志</span><br><span class="line"></span><br><span class="line">git show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span><br><span class="line"></span><br><span class="line">git tag                                                   # 显示已存在的tag</span><br><span class="line"></span><br><span class="line">git tag -a v2.0 -m &apos;xxx&apos;                                  # 增加v2.0的tag</span><br><span class="line"></span><br><span class="line">git show v2.0                                             # 显示v2.0的日志及详细内容</span><br><span class="line"></span><br><span class="line">git log v2.0                                              # 显示v2.0的日志</span><br><span class="line"></span><br><span class="line">git diff                                                  # 显示所有未添加至index的变更</span><br><span class="line"></span><br><span class="line">git diff --cached                                         # 显示所有已添加index但还未commit的变更</span><br><span class="line"></span><br><span class="line">git diff HEAD^                                            # 比较与上一个版本的差异</span><br><span class="line"></span><br><span class="line">git diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异</span><br><span class="line"></span><br><span class="line">git diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的</span><br><span class="line"></span><br><span class="line">git diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容</span><br><span class="line"></span><br><span class="line">git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）</span><br><span class="line"></span><br><span class="line">git branch                                                # 显示本地分支</span><br><span class="line"></span><br><span class="line">git branch --contains 50089                               # 显示包含提交50089的分支</span><br><span class="line"></span><br><span class="line">git branch -a                                             # 显示所有分支</span><br><span class="line"></span><br><span class="line">git branch -r                                             # 显示所有原创分支</span><br><span class="line"></span><br><span class="line">git branch --merged                                       # 显示所有已合并到当前分支的分支</span><br><span class="line"></span><br><span class="line">git branch --no-merged                                    # 显示所有未合并到当前分支的分支</span><br><span class="line"></span><br><span class="line">git branch -m master master_copy                          # 本地分支改名</span><br><span class="line"></span><br><span class="line">git checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出</span><br><span class="line"></span><br><span class="line">git checkout -b master master_copy                        # 上面的完整版</span><br><span class="line"></span><br><span class="line">git checkout features/performance                         # 检出已存在的features/performance分支</span><br><span class="line"></span><br><span class="line">git checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span><br><span class="line"></span><br><span class="line">git checkout v2.0                                         # 检出版本v2.0</span><br><span class="line"></span><br><span class="line">git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出</span><br><span class="line"></span><br><span class="line">git checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）</span><br><span class="line"></span><br><span class="line">git merge origin/master                                   # 合并远程master分支至当前分支</span><br><span class="line"></span><br><span class="line">git cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改</span><br><span class="line"></span><br><span class="line">git push origin master                                    # 将当前分支push到远程master分支</span><br><span class="line"></span><br><span class="line">git push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支</span><br><span class="line"></span><br><span class="line">git push --tags                                           # 把所有tag推送到远程仓库</span><br><span class="line"></span><br><span class="line">git fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）</span><br><span class="line"></span><br><span class="line">git fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支</span><br><span class="line"></span><br><span class="line">git pull origin master                                    # 获取远程分支master并merge到当前分支</span><br><span class="line"></span><br><span class="line">git mv README README2                                     # 重命名文件README为README2</span><br><span class="line"></span><br><span class="line">git reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）</span><br><span class="line"></span><br><span class="line">git rebase</span><br><span class="line"></span><br><span class="line">git branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span><br><span class="line"></span><br><span class="line">git branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933</span><br><span class="line"></span><br><span class="line">git ls-files                                              # 列出git index包含的文件</span><br><span class="line"></span><br><span class="line">git show-branch                                           # 图示当前分支历史</span><br><span class="line"></span><br><span class="line">git show-branch --all                                     # 图示所有分支历史</span><br><span class="line"></span><br><span class="line">git whatchanged                                           # 显示提交历史对应的文件修改</span><br><span class="line"></span><br><span class="line">git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class="line"></span><br><span class="line">git ls-tree HEAD                                          # 内部命令：显示某个git对象</span><br><span class="line"></span><br><span class="line">git rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASH</span><br><span class="line"></span><br><span class="line">git reflog                                                # 显示所有提交，包括孤立节点</span><br><span class="line"></span><br><span class="line">git show HEAD@&#123;5&#125;</span><br><span class="line"></span><br><span class="line">git show master@&#123;yesterday&#125;                               # 显示master分支昨天的状态</span><br><span class="line"></span><br><span class="line">git log --pretty=format:&apos;%h %s&apos; --graph                   # 图示提交日志</span><br><span class="line"></span><br><span class="line">git show HEAD~3</span><br><span class="line"></span><br><span class="line">git show -s --pretty=raw 2be7fcb476</span><br><span class="line"></span><br><span class="line">git stash                                                 # 暂存当前修改，将所有至为HEAD状态</span><br><span class="line"></span><br><span class="line">git stash list                                            # 查看所有暂存</span><br><span class="line"></span><br><span class="line">git stash show -p stash@&#123;0&#125;                               # 参考第一次暂存</span><br><span class="line"></span><br><span class="line">git stash apply stash@&#123;0&#125;                                 # 应用第一次暂存</span><br><span class="line"></span><br><span class="line">git grep &quot;delete from&quot;                                    # 文件中搜索文本“delete from”</span><br><span class="line"></span><br><span class="line">git grep -e &apos;#define&apos; --and -e SORT_DIRENT</span><br><span class="line"></span><br><span class="line">git gc</span><br><span class="line"></span><br><span class="line">git fsck</span><br><span class="line"></span><br><span class="line">Git是一个很强大的分布式版本控制系统。它不但适用于管理大型开源软件的源代码，管理私人的文档和源代码也有很多优势。</span><br><span class="line"></span><br><span class="line">Git常用操作命令：</span><br><span class="line"></span><br><span class="line">1) 远程仓库相关命令</span><br><span class="line"></span><br><span class="line">检出仓库：$ git clone git://github.com/jquery/jquery.git</span><br><span class="line"></span><br><span class="line">查看远程仓库：$ git remote -v</span><br><span class="line"></span><br><span class="line">添加远程仓库：$ git remote add [name] [url]</span><br><span class="line"></span><br><span class="line">删除远程仓库：$ git remote rm [name]</span><br><span class="line"></span><br><span class="line">修改远程仓库：$ git remote set-url --push [name] [newUrl]</span><br><span class="line"></span><br><span class="line">拉取远程仓库：$ git pull [remoteName] [localBranchName]</span><br><span class="line"></span><br><span class="line">推送远程仓库：$ git push [remoteName] [localBranchName]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，如下：</span><br><span class="line"></span><br><span class="line">$git push origin test:master         // 提交本地test分支作为远程的master分支</span><br><span class="line"></span><br><span class="line">$git push origin test:test              // 提交本地test分支作为远程的test分支</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2）分支(branch)操作相关命令</span><br><span class="line"></span><br><span class="line">查看本地分支：$ git branch</span><br><span class="line"></span><br><span class="line">查看远程分支：$ git branch -r</span><br><span class="line"></span><br><span class="line">创建本地分支：$ git branch [name] ----注意新分支创建后不会自动切换为当前分支</span><br><span class="line"></span><br><span class="line">切换分支：$ git checkout [name]</span><br><span class="line"></span><br><span class="line">创建新分支并立即切换到新分支：$ git checkout -b [name]</span><br><span class="line"></span><br><span class="line">删除分支：$ git branch -d [name] ---- -d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项</span><br><span class="line"></span><br><span class="line">合并分支：$ git merge [name] ----将名称为[name]的分支与当前分支合并</span><br><span class="line"></span><br><span class="line">创建远程分支(本地分支push到远程)：$ git push origin [name]</span><br><span class="line"></span><br><span class="line">删除远程分支：$ git push origin :heads/[name] 或 $ gitpush origin :[name] </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*创建空的分支：(执行命令之前记得先提交你当前分支的修改，否则会被强制删干净没得后悔)</span><br><span class="line"></span><br><span class="line">$git symbolic-ref HEAD refs/heads/[name]</span><br><span class="line"></span><br><span class="line">$rm .git/index</span><br><span class="line"></span><br><span class="line">$git clean -fdx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3）版本(tag)操作相关命令</span><br><span class="line"></span><br><span class="line">查看版本：$ git tag</span><br><span class="line"></span><br><span class="line">创建版本：$ git tag [name]</span><br><span class="line"></span><br><span class="line">删除版本：$ git tag -d [name]</span><br><span class="line"></span><br><span class="line">查看远程版本：$ git tag -r</span><br><span class="line"></span><br><span class="line">创建远程版本(本地版本push到远程)：$ git push origin [name]</span><br><span class="line"></span><br><span class="line">删除远程版本：$ git push origin :refs/tags/[name]</span><br><span class="line"></span><br><span class="line">合并远程仓库的tag到本地：$ git pull origin --tags</span><br><span class="line"></span><br><span class="line">上传本地tag到远程仓库：$ git push origin --tags</span><br><span class="line"></span><br><span class="line">创建带注释的tag：$ git tag -a [name] -m &apos;yourMessage&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4) 子模块(submodule)相关操作命令</span><br><span class="line"></span><br><span class="line">添加子模块：$ git submodule add [url] [path]</span><br><span class="line"></span><br><span class="line">   如：$git submodule add git://github.com/soberh/ui-libs.git src/main/webapp/ui-libs</span><br><span class="line"></span><br><span class="line">初始化子模块：$ git submodule init  ----只在首次检出仓库时运行一次就行</span><br><span class="line"></span><br><span class="line">更新子模块：$ git submodule update ----每次更新或切换分支后都需要运行一下</span><br><span class="line"></span><br><span class="line">删除子模块：（分4步走哦）</span><br><span class="line"></span><br><span class="line"> 1) $ git rm --cached [path]</span><br><span class="line"></span><br><span class="line"> 2) 编辑“.gitmodules”文件，将子模块的相关配置节点删除掉</span><br><span class="line"></span><br><span class="line"> 3) 编辑“ .git/config”文件，将子模块的相关配置节点删除掉</span><br><span class="line"></span><br><span class="line"> 4) 手动删除子模块残留的目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5）忽略一些文件、文件夹不提交</span><br><span class="line"></span><br><span class="line">在仓库根目录下创建名称为“.gitignore”的文件，写入不需要的文件夹名或文件，每个元素占一行即可，如</span><br><span class="line"></span><br><span class="line">target</span><br><span class="line"></span><br><span class="line">bin</span><br><span class="line"></span><br><span class="line">*.db</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">Git 常用命令</span><br><span class="line"></span><br><span class="line">git branch 查看本地所有分支</span><br><span class="line"></span><br><span class="line">git status 查看当前状态</span><br><span class="line"></span><br><span class="line">git commit 提交</span><br><span class="line"></span><br><span class="line">git branch -a 查看所有的分支</span><br><span class="line"></span><br><span class="line">git branch -r 查看本地所有分支</span><br><span class="line"></span><br><span class="line">git commit -am &quot;init&quot; 提交并且加注释</span><br><span class="line"></span><br><span class="line">git remote add origin git@192.168.1.119:ndshow</span><br><span class="line"></span><br><span class="line">git push origin master 将文件给推到服务器上</span><br><span class="line"></span><br><span class="line">git remote show origin 显示远程库origin里的资源</span><br><span class="line"></span><br><span class="line">git push origin master:develop</span><br><span class="line"></span><br><span class="line">git push origin master:hb-dev 将本地库与服务器上的库进行关联</span><br><span class="line"></span><br><span class="line">git checkout --track origin/dev 切换到远程dev分支</span><br><span class="line"></span><br><span class="line">git branch -D master develop 删除本地库develop</span><br><span class="line"></span><br><span class="line">git checkout -b dev 建立一个新的本地分支dev</span><br><span class="line"></span><br><span class="line">git merge origin/dev 将分支dev与当前分支进行合并</span><br><span class="line"></span><br><span class="line">git checkout dev 切换到本地dev分支</span><br><span class="line"></span><br><span class="line">git remote show 查看远程库</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git rm 文件名(包括路径) 从git中删除指定文件</span><br><span class="line"></span><br><span class="line">git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来</span><br><span class="line"></span><br><span class="line">git config --list 看所有用户</span><br><span class="line"></span><br><span class="line">git ls-files 看已经被提交的</span><br><span class="line"></span><br><span class="line">git rm [file name] 删除一个文件</span><br><span class="line"></span><br><span class="line">git commit -a 提交当前repos的所有的改变</span><br><span class="line"></span><br><span class="line">git add [file name] 添加一个文件到git index</span><br><span class="line"></span><br><span class="line">git commit -v 当你用－v参数的时候可以看commit的差异</span><br><span class="line"></span><br><span class="line">git commit -m &quot;This is the message describing the commit&quot; 添加commit信息</span><br><span class="line"></span><br><span class="line">git commit -a -a是代表add，把所有的change加到git index里然后再commit</span><br><span class="line"></span><br><span class="line">git commit -a -v 一般提交命令</span><br><span class="line"></span><br><span class="line">git log 看你commit的日志</span><br><span class="line"></span><br><span class="line">git diff 查看尚未暂存的更新</span><br><span class="line"></span><br><span class="line">git rm a.a 移除文件(从暂存区和工作区中删除)</span><br><span class="line"></span><br><span class="line">git rm --cached a.a 移除文件(只从暂存区中删除)</span><br><span class="line"></span><br><span class="line">git commit -m &quot;remove&quot; 移除文件(从Git中删除)</span><br><span class="line"></span><br><span class="line">git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)</span><br><span class="line"></span><br><span class="line">git diff --cached 或 $ git diff --staged 查看尚未提交的更新</span><br><span class="line"></span><br><span class="line">git stash push 将文件给push到一个临时空间中</span><br><span class="line"></span><br><span class="line">git stash pop 将文件从临时空间pop下来</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------</span><br><span class="line"></span><br><span class="line">git remote add origin git@github.com:username/Hello-World.git</span><br><span class="line"></span><br><span class="line">git push origin master 将本地项目给提交到服务器中</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------</span><br><span class="line"></span><br><span class="line">git pull 本地与服务器端同步</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。</span><br><span class="line"></span><br><span class="line">git push origin serverfix:awesomebranch</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">git fetch 相当于是从远程获取最新版本到本地，不会自动merge</span><br><span class="line"></span><br><span class="line">git commit -a -m &quot;log_message&quot; (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：</span><br><span class="line"></span><br><span class="line">git branch branch_0.1 master 从主分支master创建branch_0.1分支</span><br><span class="line"></span><br><span class="line">git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0</span><br><span class="line"></span><br><span class="line">git checkout branch_1.0/master 切换到branch_1.0/master分支</span><br><span class="line"></span><br><span class="line">du -hs</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------</span><br><span class="line"></span><br><span class="line">mkdir WebApp</span><br><span class="line"></span><br><span class="line">cd WebApp</span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">touch README</span><br><span class="line"></span><br><span class="line">git add README</span><br><span class="line"></span><br><span class="line">git commit -m &apos;first commit&apos;</span><br><span class="line"></span><br><span class="line">git remote add origin git@github.com:xiayk/test.git</span><br><span class="line"></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="git" scheme="https://xiayk.cn/categories/git/"/>
    
    
      <category term="git" scheme="https://xiayk.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序-Java (模板消息)</title>
    <link href="https://xiayk.cn/2019/08/25/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-java-%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF/"/>
    <id>https://xiayk.cn/2019/08/25/微信小程序-java-模板消息/</id>
    <published>2019-08-25T11:08:00.000Z</published>
    <updated>2020-04-04T14:50:11.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="微信小程序模板消息"><a href="#微信小程序模板消息" class="headerlink" title="微信小程序模板消息"></a>微信小程序模板消息</h3><ul><li>请求地址(POST)<br>  <code>https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=TOKEN</code></li><li>请求参数  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"template_id"</span>: <span class="string">"模板Id (XXXX)"</span>,</span><br><span class="line">    <span class="attr">"touser"</span>: <span class="string">"接收用户的openId (XXXX)"</span>,</span><br><span class="line">    <span class="attr">"page"</span>: <span class="string">"点击模板消息跳转页面 (pages/index?data=XX)"</span>,</span><br><span class="line">    <span class="attr">"data"</span>: </span><br><span class="line">    &#123;</span><br><span class="line">    <span class="attr">"keyword1"</span>: &#123;<span class="attr">"value"</span>: <span class="string">""</span>&#125;,</span><br><span class="line">        <span class="attr">"keyword2"</span>: &#123;<span class="attr">"value"</span>: <span class="string">""</span>&#125;,</span><br><span class="line">        <span class="attr">"keyword3"</span>: &#123;<span class="attr">"value"</span>: <span class="string">""</span>&#125;,</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="获取access-token"><a href="#获取access-token" class="headerlink" title="获取access_token"></a>获取access_token</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取微信access_token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getToken</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String token;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//获取redis中token</span></span><br><span class="line">            token = redisTemplate.opsForValue().get(<span class="string">"access_token"</span>);</span><br><span class="line">            <span class="keyword">if</span> (token == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        <span class="comment">//重新获取token</span></span><br><span class="line">            String url = String.format(<span class="string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=%s&amp;secret=%s"</span>,appId, appsecret);</span><br><span class="line">            token = JSONObject.parseObject(Utils.doGet(url)).getString(<span class="string">"access_token"</span>);</span><br><span class="line">           <span class="comment">//存入redis  7200s 2小时过期 redisTemplate.opsForValue().set("access_token", token, 7200, TimeUnit.SECONDS);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="发送模板消息"><a href="#发送模板消息" class="headerlink" title="发送模板消息"></a>发送模板消息</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求地址</span></span><br><span class="line">String url = String.format(<span class="string">"https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=%s"</span>, token);</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求参数</span></span><br><span class="line">JSONObject jsonObject = <span class="keyword">new</span> JSONObject();</span><br><span class="line">jsonObject.put(<span class="string">"template_id"</span>, templateId);</span><br><span class="line">jsonObject.put(<span class="string">"form_id"</span>, formId);</span><br><span class="line">jsonObject.put(<span class="string">"touser"</span>, toUser);</span><br><span class="line">jsonObject.put(<span class="string">"page"</span>, pagePath);</span><br><span class="line"></span><br><span class="line"><span class="comment">//data</span></span><br><span class="line">JSONObject jsonData = <span class="keyword">new</span> JSONObject();</span><br><span class="line">JSONObject json1 = <span class="keyword">new</span> JSONObjectect();</span><br><span class="line">json1.put(<span class="string">"value"</span>, <span class="string">""</span>);</span><br><span class="line">jsonData.put(<span class="string">"keyword1"</span>, json1);</span><br><span class="line">JSONObject json2 = <span class="keyword">new</span> JSONObject();</span><br><span class="line">json2.put(<span class="string">"value"</span>, <span class="string">""</span>);</span><br><span class="line">jsonData.put(<span class="string">"keyword2"</span>, json2);</span><br><span class="line">JSONObject json3 = <span class="keyword">new</span> JSONObject();</span><br><span class="line">json3.put(<span class="string">"value"</span>, <span class="string">""</span>);</span><br><span class="line">jsonData.put(<span class="string">"keyword3"</span>, json3);</span><br><span class="line">JSONObject json4 = <span class="keyword">new</span> JSONObject();</span><br><span class="line">json4.put(<span class="string">"value"</span>, <span class="string">""</span>);</span><br><span class="line">jsonData.put(<span class="string">"keyword4"</span>, json4);</span><br><span class="line"></span><br><span class="line">jsonObject.put(<span class="string">"data"</span>, jsonData);</span><br><span class="line"></span><br><span class="line">doPost(jsonObject.toJSONString(), url);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;微信小程序模板消息&quot;&gt;&lt;a href=&quot;#微信小程序模板消息&quot; class=&quot;headerlink&quot; title=&quot;微信小程序模板消息&quot;&gt;&lt;/a&gt;微信小程序模板消息&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求地址(POST)&lt;br&gt;  &lt;code&gt;https://api.we
      
    
    </summary>
    
      <category term="小程序" scheme="https://xiayk.cn/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="Java" scheme="https://xiayk.cn/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/Java/"/>
    
    
      <category term="小程序" scheme="https://xiayk.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="Java" scheme="https://xiayk.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Springboot集成jwt实现token验证</title>
    <link href="https://xiayk.cn/2019/06/28/springboot%E9%9B%86%E6%88%90jwt%E5%AE%9E%E7%8E%B0token%E9%AA%8C%E8%AF%81/"/>
    <id>https://xiayk.cn/2019/06/28/springboot集成jwt实现token验证/</id>
    <published>2019-06-28T04:51:00.000Z</published>
    <updated>2019-06-28T20:05:34.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT"></a>什么是JWT</h4><p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC 7519).定义了一种简洁的，自包含的方法用于通信双方之间以JSON对象的形式安全的传递信息。因为数字签名的存在，这些信息是可信的，JWT可以使用HMAC算法或者是RSA的公私秘钥对进行签名。</p><h4 id="JWT请求流程"><a href="#JWT请求流程" class="headerlink" title="JWT请求流程"></a>JWT请求流程</h4><image src="http://file.xiayk.com/4630295-7df0d10fcffe831b.png"><ol><li>用户使用账号和面发出post请求；</li><li>服务器使用私钥创建一个jwt；</li><li>服务器返回这个jwt给浏览器；</li><li>浏览器将该jwt串在请求头中像服务器发送请求；</li><li>服务器验证该jwt；</li><li>返回响应的资源给浏览器。</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>JwtConfig.java<br>创建token  存入redis 设置token过时间, 如果在规定时间内没有验证token redis就会删除token<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据微信用户登陆信息创建 token</span></span><br><span class="line"><span class="comment">* 注 : 这里的token会被缓存到redis中,用作为二次验证</span></span><br><span class="line"><span class="comment">* redis里面缓存的时间应该和jwt token的过期时间设置相同</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> wxRes 微信用户信息</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 返回 jwt token</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">createTokenByWxAccount</span><span class="params">(WxRes wxRes)</span> </span>&#123;</span><br><span class="line">        String jwtId = UUID.randomUUID().toString();                 <span class="comment">//JWT 随机ID,做为验证的key</span></span><br><span class="line">        <span class="comment">//1 . 加密算法进行签名得到token</span></span><br><span class="line">        Algorithm algorithm = Algorithm.HMAC256(SECRET_KEY);</span><br><span class="line">        String token = JWT.create()</span><br><span class="line">                .withClaim(<span class="string">"wxOpenId"</span>, wxRes.getWxopenid())</span><br><span class="line">                .withClaim(<span class="string">"sessionKey"</span>, wxRes.getSessionkey())</span><br><span class="line">                .withClaim(<span class="string">"jwt-id"</span>, jwtId)</span><br><span class="line">                .withExpiresAt(<span class="keyword">new</span> Date(System.currentTimeMillis() + expire_time*<span class="number">1000</span>))  <span class="comment">//JWT 配置过期时间的正确姿势</span></span><br><span class="line">                .sign(algorithm);</span><br><span class="line">        <span class="comment">//2 . Redis缓存JWT, 注 : 请和JWT过期时间一致</span></span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">"JWT-SESSION-"</span> + jwtId, token, expire_time, TimeUnit.SECONDS);</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>验证token redis给token续期<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 校验token是否正确</span></span><br><span class="line"><span class="comment"> * 1 . 根据token解密，解密出jwt-id , 先从redis中查找出redisToken，匹配是否相同</span></span><br><span class="line"><span class="comment"> * 2 . 然后再对redisToken进行解密，解密成功则 继续流程 和 进行token续期</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> token 密钥</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回是否校验通过</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verifyToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//1 . 根据token解密，解密出jwt-id , 先从redis中查找出redisToken，匹配是否相同</span></span><br><span class="line">        String redisToken = redisTemplate.opsForValue().get(<span class="string">"JWT-SESSION-"</span> + getJwtIdByToken(token));</span><br><span class="line">         <span class="keyword">if</span> (!redisToken.equals(token)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">         <span class="comment">//2 . 得到算法相同的JWTVerifier</span></span><br><span class="line">         Algorithm algorithm = Algorithm.HMAC256(SECRET_KEY);</span><br><span class="line">         JWTVerifier verifier = JWT.require(algorithm)</span><br><span class="line">                 .withClaim(<span class="string">"wxOpenId"</span>, getWxOpenIdByToken(redisToken))</span><br><span class="line">                 .withClaim(<span class="string">"sessionKey"</span>, getSessionKeyByToken(redisToken))</span><br><span class="line">                 .withClaim(<span class="string">"jwt-id"</span>, getJwtIdByToken(redisToken))</span><br><span class="line">                 .acceptExpiresAt(System.currentTimeMillis() + expire_time*<span class="number">1000</span> )  <span class="comment">//JWT 正确的配置续期姿势</span></span><br><span class="line">                 .build();</span><br><span class="line">         <span class="comment">//3 . 验证token</span></span><br><span class="line">         verifier.verify(redisToken);</span><br><span class="line">         <span class="comment">//4 . Redis缓存JWT续期</span></span><br><span class="line">         redisTemplate.opsForValue().set(<span class="string">"JWT-SESSION-"</span> + getJwtIdByToken(token), redisToken, expire_time, TimeUnit.SECONDS);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123; <span class="comment">//捕捉到任何异常都视为校验失败</span></span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>拦截器<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拦截器  token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> LoginInterceptor</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> XiaYk</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-06-23 22:06</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(LoginInterceptor.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WxResService service;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String notloginRes = JSONObject.toJSONString(<span class="keyword">new</span> RestResult(<span class="keyword">false</span>, -<span class="number">1</span>, <span class="string">""</span>, <span class="string">"未登录"</span>));</span><br><span class="line">    <span class="keyword">private</span> String errRes = JSONObject.toJSONString(<span class="keyword">new</span> RestResult(<span class="keyword">false</span>, -<span class="number">2</span>, <span class="string">""</span>, <span class="string">"登录过期, 请重新登录"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"application/json; charset=utf-8"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-control-Allow-Origin"</span>, request.getHeader(<span class="string">"Origin"</span>));</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"GET,POST,OPTIONS,PUT,DELETE"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>, request.getHeader(<span class="string">"Access-Control-Request-Headers"</span>));</span><br><span class="line">        <span class="comment">// 跨域时会首先发送一个option请求，这里我们给option请求直接返回正常状态</span></span><br><span class="line">        <span class="keyword">if</span> (request.getMethod().equals(RequestMethod.OPTIONS.name())) &#123;</span><br><span class="line">            response.setStatus(HttpStatus.OK.value());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取访问URL</span></span><br><span class="line">        String url = request.getRequestURL().toString();</span><br><span class="line">        String token = request.getHeader(<span class="string">"XWEB_TOKEN"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (token == <span class="keyword">null</span>)&#123;</span><br><span class="line">            PrintWriter out = response.getWriter();</span><br><span class="line">            out.append(notloginRes);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (service.verifyToken(token))&#123;</span><br><span class="line">            logger.info(<span class="string">"url ====&gt; &#123;&#125;  token ====&gt; &#123;&#125;"</span>, url, token);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            logger.info(<span class="string">"token 过期"</span>);</span><br><span class="line">            PrintWriter out = response.getWriter();</span><br><span class="line">            out.println(errRes);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * // 请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> handler</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modelAndView</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在整个请求结束之后被调用，也就是在DispatcherServlet 渲染了对应的视图之后执行（主要是用于进行资源清理工作）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> handler</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> MyWebAppConfigurer</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> XiaYk</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-06-24 00:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebAppConfigurer</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">LoginInterceptor <span class="title">interceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LoginInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configureMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.configureMessageConverters(converters);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.addInterceptors(registry);</span><br><span class="line">        registry.addInterceptor(interceptor()).addPathPatterns(<span class="string">"/wx/**"</span>)<span class="comment">//拦截</span></span><br><span class="line">                .excludePathPatterns(<span class="string">"/wx/login"</span>).excludePathPatterns(<span class="string">"/getData"</span>);<span class="comment">//开放</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在controller调用 获取token 返回给前端<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"login"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> RestResult <span class="title">wxLogin</span><span class="params">(@RequestParam(<span class="string">"code"</span>)</span> String code)</span>&#123;</span><br><span class="line">    String token = wxResService.selectByCode(code);</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"token"</span>, token);</span><br><span class="line">    map.put(<span class="string">"username"</span>, <span class="string">"XiaYk"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> RestResult(<span class="keyword">true</span>, <span class="number">200</span>, map, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>pom.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--springboot--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--JWT--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p></image>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;什么是JWT&quot;&gt;&lt;a href=&quot;#什么是JWT&quot; class=&quot;headerlink&quot; title=&quot;什么是JWT&quot;&gt;&lt;/a&gt;什么是JWT&lt;/h4&gt;&lt;p&gt;Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准
      
    
    </summary>
    
      <category term="java" scheme="https://xiayk.cn/categories/java/"/>
    
    
      <category term="java" scheme="https://xiayk.cn/tags/java/"/>
    
      <category term="springboot" scheme="https://xiayk.cn/tags/springboot/"/>
    
      <category term="jwt" scheme="https://xiayk.cn/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序-Java (登录)</title>
    <link href="https://xiayk.cn/2019/05/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-Java-%E7%99%BB%E5%BD%95/"/>
    <id>https://xiayk.cn/2019/05/10/微信小程序-Java-登录/</id>
    <published>2019-05-10T05:17:00.000Z</published>
    <updated>2019-07-21T10:11:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/wx.login.html" target="_blank" rel="noopener">微信官方文档</a><br>小程序可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标识，快速建立小程序内的用户体系。</p><h3 id="一-Java后端"><a href="#一-Java后端" class="headerlink" title="一,Java后端"></a>一,Java后端</h3><p>接收小程序端传过来的code;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 微信登录</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(value = <span class="string">"/login"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> RestResult <span class="title">wxlogin</span><span class="params">(@RequestParam(<span class="string">"code"</span>)</span> String code)</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//获取openid</span></span><br><span class="line">       JSONObject jsonObject = WxUtil.getSessionKeyOropenid(code);</span><br><span class="line">       String openid = jsonObject.get(<span class="string">"openid"</span>).toString();</span><br><span class="line">       System.out.println(code);</span><br><span class="line">       WxUserInfoKey wxUserInfoKey = <span class="keyword">new</span> WxUserInfoKey();</span><br><span class="line">       wxUserInfoKey.setOpenid(openid);</span><br><span class="line">       WxUserInfo info = wxUserInfoService.selectByPrimaryKey(wxUserInfoKey);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (info == <span class="keyword">null</span>)&#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> MyException(-<span class="number">1</span>, <span class="string">"未绑定账户"</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       UserKey key = <span class="keyword">new</span> UserKey();</span><br><span class="line">       key.setUsername(info.getUsername());</span><br><span class="line">       User user = userService.selectByPrimaryKey(key);</span><br><span class="line">       Subject subject = SecurityUtils.getSubject();</span><br><span class="line">       UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(user.getUsername(),user.getPassword());</span><br><span class="line">       subject.login(token);</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> RestResult(<span class="keyword">true</span>,<span class="number">0</span>,info,<span class="string">"mes: ok"</span>);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>WeChat工具类/获取openid<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiayk.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.jce.provider.BouncyCastleProvider;</span><br><span class="line"><span class="keyword">import</span> org.codehaus.xfire.util.Base64;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.BadPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.IllegalBlockSizeException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.NoSuchPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.IvParameterSpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.*;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidParameterSpecException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> WxUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> XiaYk</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-04-26 19:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WxUtil</span> </span>&#123;</span><br><span class="line">    Logger log = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取微信小程序 session_key 和 openid</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> zhy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 调用微信登陆返回的Code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">getSessionKeyOropenid</span><span class="params">(String wxCode)</span></span>&#123;</span><br><span class="line">        String requestUrl = <span class="string">"https://api.weixin.qq.com/sns/jscode2session"</span>;<span class="comment">//resource.getString("url"); //请求地址 https://api.weixin.qq.com/sns/jscode2session</span></span><br><span class="line">        Map&lt;String,String&gt; requestUrlParam = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        requestUrlParam.put(<span class="string">"appid"</span>, <span class="string">"*************"</span>); <span class="comment">//开发者设置中的appId</span></span><br><span class="line">        requestUrlParam.put(<span class="string">"secret"</span>, <span class="string">"***********************"</span>); <span class="comment">//开发者设置中的appSecret</span></span><br><span class="line">        requestUrlParam.put(<span class="string">"js_code"</span>, wxCode); <span class="comment">//小程序调用wx.login返回的code</span></span><br><span class="line">        requestUrlParam.put(<span class="string">"grant_type"</span>, <span class="string">"authorization_code"</span>);  <span class="comment">//默认参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送post请求读取调用微信 https://api.weixin.qq.com/sns/jscode2session 接口获取openid用户唯一标识</span></span><br><span class="line">        JSONObject jsonObject = JSON.parseObject(UrlUtil.sendPost(requestUrl, requestUrlParam));</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密用户敏感数据获取用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> zhy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sessionKey 数据进行加密签名的密钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> encryptedData 包括敏感数据在内的完整用户信息的加密数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iv 加密算法的初始向量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title">getUserInfo</span><span class="params">(String encryptedData,String sessionKey,String iv)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 被加密的数据</span></span><br><span class="line">        <span class="keyword">byte</span>[] dataByte = Base64.decode(encryptedData);</span><br><span class="line">        <span class="comment">// 加密秘钥</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyByte = Base64.decode(sessionKey);</span><br><span class="line">        <span class="comment">// 偏移量</span></span><br><span class="line">        <span class="keyword">byte</span>[] ivByte = Base64.decode(iv);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 如果密钥不足16位，那么就补足. 这个if 中的内容很重要</span></span><br><span class="line">            <span class="keyword">int</span> base = <span class="number">16</span>;</span><br><span class="line">            <span class="keyword">if</span> (keyByte.length % base != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> groups = keyByte.length / base + (keyByte.length % base != <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">byte</span>[] temp = <span class="keyword">new</span> <span class="keyword">byte</span>[groups * base];</span><br><span class="line">                Arrays.fill(temp, (<span class="keyword">byte</span>) <span class="number">0</span>);</span><br><span class="line">                System.arraycopy(keyByte, <span class="number">0</span>, temp, <span class="number">0</span>, keyByte.length);</span><br><span class="line">                keyByte = temp;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 初始化</span></span><br><span class="line">            Security.addProvider(<span class="keyword">new</span> BouncyCastleProvider());</span><br><span class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/CBC/PKCS7Padding"</span>,<span class="string">"BC"</span>);</span><br><span class="line">            SecretKeySpec spec = <span class="keyword">new</span> SecretKeySpec(keyByte, <span class="string">"AES"</span>);</span><br><span class="line">            AlgorithmParameters parameters = AlgorithmParameters.getInstance(<span class="string">"AES"</span>);</span><br><span class="line">            parameters.init(<span class="keyword">new</span> IvParameterSpec(ivByte));</span><br><span class="line">            cipher.init(Cipher.DECRYPT_MODE, spec, parameters);<span class="comment">// 初始化</span></span><br><span class="line">            <span class="keyword">byte</span>[] resultByte = cipher.doFinal(dataByte);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != resultByte &amp;&amp; resultByte.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                String result = <span class="keyword">new</span> String(resultByte, <span class="string">"UTF-8"</span>);</span><br><span class="line">                <span class="keyword">return</span> JSON.parseObject(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidParameterSpecException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidAlgorithmParameterException e) &#123;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchProviderException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/api/wx.login.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微信官方文档&lt;/a&gt;&lt;br&gt;小程序可以通过微信官方提供的登
      
    
    </summary>
    
      <category term="java" scheme="https://xiayk.cn/categories/java/"/>
    
    
      <category term="小程序" scheme="https://xiayk.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="Java" scheme="https://xiayk.cn/tags/Java/"/>
    
      <category term="wechat" scheme="https://xiayk.cn/tags/wechat/"/>
    
      <category term="springboot" scheme="https://xiayk.cn/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Linux下Nginx+Tomcat整合配置</title>
    <link href="https://xiayk.cn/2019/05/05/Linux%E4%B8%8BNginx-Tomcat%E6%95%B4%E5%90%88%E9%85%8D%E7%BD%AE/"/>
    <id>https://xiayk.cn/2019/05/05/Linux下Nginx-Tomcat整合配置/</id>
    <published>2019-05-05T14:14:21.000Z</published>
    <updated>2019-06-28T05:02:36.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-安装jdk和tomcat"><a href="#一-安装jdk和tomcat" class="headerlink" title="一, 安装jdk和tomcat"></a>一, 安装jdk和tomcat</h4><p>1, jdk安装<br>jdk的话,我直接用的yum安装的,简单方便<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum list java-1.8*</span><br><span class="line">yum install java-1.8*</span><br></pre></td></tr></table></figure></p><p>安装完检查jdk<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p><p>安装成功后就可以开始安装tomcat了</p><p>2, tomcat安装<br>先去tomcat官网  找到自己需要的版本 下载那个<code>tar.gz</code>后缀的<br>我用的<a href="http://tomcat.apache.org" target="_blank" rel="noopener">tomcat官网</a><br>然后在服务器上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//下载</span><br><span class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.40/bin/apache-tomcat-8.5.40.tar.gz</span><br><span class="line">//解压</span><br><span class="line">tar -zxvf apache-tomcat-8.5.40.tar.gz</span><br></pre></td></tr></table></figure></p><p>下载完解压然后测试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//运行</span><br><span class="line">./apache-tomcat-8.5.40.tar.gz/bin/start.sh</span><br></pre></td></tr></table></figure></p><p>访问一下<code>ip:8080</code>如能成功显示tomcat页面就行了<br>如不能访问,先看一下tomcat日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat apache-tomcat-8.5.40/logs/catalina.out</span><br></pre></td></tr></table></figure></p><p>一般应该是没问题的, 看一下8080端口是否开放<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef| grep tomcat</span><br></pre></td></tr></table></figure></p><p>这个可以看tomcat进程<br>没问题的话  就可以开始下一步了</p><h4 id="二-Nginx安装和配置"><a href="#二-Nginx安装和配置" class="headerlink" title="二, Nginx安装和配置"></a>二, Nginx安装和配置</h4><p>nginx我也是刚开始来了解, 可能配置得不是很专业<br><a href="http://nginx.org" target="_blank" rel="noopener">nginx官网</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//下载</span><br><span class="line">wget http://nginx.org/download/nginx-1.14.2.tar.gz</span><br><span class="line">//解压</span><br><span class="line">tar -zxvf nginx-1.14.2.tar.gz</span><br></pre></td></tr></table></figure></p><p>80端口配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  xiayk.cn; #域名</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        location / &#123;</span><br><span class="line">           root   html; #站点目录</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  api.xiayk.cn;</span><br><span class="line">        index index.html index.htm index.jsp;</span><br><span class="line">        location / &#123;</span><br><span class="line">           proxy_pass http://127.0.0.1:8080/api;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>443端口配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen 443;</span><br><span class="line">     server_name xiayk.cn; #填写绑定证书的域名</span><br><span class="line">     ssl on;</span><br><span class="line">     ssl_certificate /usr/local/nginx/conf/ssl/www/1_xiayk.cn_bundle.crt;</span><br><span class="line">     ssl_certificate_key /usr/local/nginx/conf/ssl/www/2_xiayk.cn.key;</span><br><span class="line">     ssl_session_timeout 5m;</span><br><span class="line">     ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</span><br><span class="line">     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">     ssl_prefer_server_ciphers on;</span><br><span class="line">     location / &#123;</span><br><span class="line">         root   html; #站点目录</span><br><span class="line">         index  index.html index.htm;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一-安装jdk和tomcat&quot;&gt;&lt;a href=&quot;#一-安装jdk和tomcat&quot; class=&quot;headerlink&quot; title=&quot;一, 安装jdk和tomcat&quot;&gt;&lt;/a&gt;一, 安装jdk和tomcat&lt;/h4&gt;&lt;p&gt;1, jdk安装&lt;br&gt;jdk的话,我直
      
    
    </summary>
    
      <category term="Linux" scheme="https://xiayk.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://xiayk.cn/tags/Linux/"/>
    
      <category term="nginx" scheme="https://xiayk.cn/tags/nginx/"/>
    
      <category term="tomcat" scheme="https://xiayk.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://xiayk.cn/2019/05/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://xiayk.cn/2019/05/02/我的第一篇博客/</id>
    <published>2019-05-02T06:20:31.000Z</published>
    <updated>2019-05-02T06:20:31.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xiayk.cn/2019/05/02/hello-world/"/>
    <id>https://xiayk.cn/2019/05/02/hello-world/</id>
    <published>2019-05-02T05:12:47.000Z</published>
    <updated>2019-05-02T05:12:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
